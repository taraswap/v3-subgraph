apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: indexer
    meta.helm.sh/release-namespace: lswap-prod
  creationTimestamp: "2024-07-05T12:23:45Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: indexer
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: graph-node
    helm.sh/chart: graph-node-1.4.0
    helm.toolkit.fluxcd.io/name: indexer
    helm.toolkit.fluxcd.io/namespace: lswap-prod
  name: indexer-graph-node
  namespace: lswap-prod
  resourceVersion: "318654489"
  uid: 3409aba7-6da7-45f2-94a1-93efd611722b
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: indexer
      app.kubernetes.io/name: graph-node
  serviceName: indexer-graph-node
  template:
    metadata:
      annotations:
        checksum/graph-configmap: 5522946061870f0e3d00f2ede1752484e87f98c6845b5c0d7795dd2234626cc2
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: indexer
        app.kubernetes.io/name: graph-node
    spec:
      containers:
      - env:
        - name: postgres_pass
          valueFrom:
            secretKeyRef:
              key: password
              name: lswap-prod-db-default-credentials
        envFrom:
        - configMapRef:
            name: indexer-graph-node
        image: graphprotocol/graph-node:v0.27.0
        imagePullPolicy: IfNotPresent
        name: graph-node
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8001
          name: websocket
          protocol: TCP
        - containerPort: 8020
          name: jsonrpc
          protocol: TCP
        - containerPort: 8030
          name: index-status
          protocol: TCP
        - containerPort: 8040
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: indexer-graph-node
      serviceAccountName: indexer-graph-node
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: indexer-graph-node-64856d95f4
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: indexer-graph-node-64856d95f4
  updatedReplicas: 1
